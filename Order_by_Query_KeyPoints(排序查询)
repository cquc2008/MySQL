-- ---------------------------
-- 排序查询
-- ---------------------------
/*
语法：
    select 查询列表
    from   表
    where  筛选条件      # 可以没有
    order by 排序列表 [asc | desc]

特点：
    + asc 代表的是升序，desc代表的是降序，如果写，默认按升序排序
    + order by 子句中可以支持单个字段、多个字段、表达式、函数、别名
    + order by 子句一般放在查询语句的最后面，limit子句除外
 */

# 案例1： 查询员工信息，要求工资从高到低排序
select *
from employees
order by salary desc;

# 案例2：（添加筛选条件）查询部门编号大于等于90的员工信息，按入职时间的先后进行排序
select *
from employees
where department_id >= 90
order by hire_date;

# 案例3: (按表达式排序)按年薪的高低显示员工信息和年薪
select *, salary*12*(1+ifnull(commission_pct,0)) as 年薪
from employees
order by salary*12*(1+ifnull(commission_pct,0)) desc;

# 案例4: （按别名排序）按年薪的高低显示员工信息和年薪
select *, salary*12*(1+ifnull(commission_pct,0)) as 年薪
from employees
order by 年薪 asc;

# 案例5: （按函数排序）按姓名的长度显示员工的姓名和工资
select last_name, salary
from employees
order by length(last_name) asc;

# 案例6: (按多个字段排序)查询员工信息，要求先按工资排序，再按员工编号排序
select *
from employees
order by salary desc, employee_id asc;

#----------------------------------------------------------------
# 练习1: 查询员工的姓名，部门号和年薪，按年薪降序，按姓名升序
select last_name,department_id,salary*12*(1+ifnull(commission_pct,0)) as Annual_Salary
from employees
order by Annual_Salary desc,last_name asc;

# 练习2: 选择工资不在8000到17000的员工的姓名和工资，按工资降序
select last_name,salary
from employees
where not(salary between 8000 and 17000)
order by salary desc;

# 练习3: 查询邮箱中包含e的员工信息，并先按邮箱的字节数降序，再按部门号升序
select *
from employees
order by length(email) desc, department_id asc;
